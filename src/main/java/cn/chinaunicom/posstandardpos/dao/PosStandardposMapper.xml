<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.chinaunicom.posstandardpos.dao.PosStandardposMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.chinaunicom.posstandardpos.entity.PosStandardpos">
        <id column="POS_ID" property="posId" />
        <result column="POS_NAME" property="posName" />
        <result column="POS_TYPE" property="posType" />
        <result column="CORE_FLAG" property="coreFlag" />
        <result column="ORG_ID" property="orgId" />
        <result column="PARENT_POS_ID" property="parentPosId" />
        <result column="POS_CATE_ID" property="posCateId" />
        <result column="POS_SUBCATE_ID" property="posSubcateId" />
        <result column="MAJOR_ID" property="majorId" />
        <result column="JOB_ID" property="jobId" />
        <result column="ORG_LEVEL" property="orgLevel" />
        <result column="EMP_TYPE" property="empType" />
        <result column="POS_LEVEL_LOW" property="posLevelLow" />
        <result column="POS_LEVEL_HIGH" property="posLevelHigh" />
        <result column="ESTABLISHMENT" property="establishment" />
        <result column="VERSION_ID" property="versionId" />
        <result column="ACTIVE_START_DATE" property="activeStartDate" />
        <result column="ACTIVE_END_DATE" property="activeEndDate" />
        <result column="SUPERIOR_POS_NAME" property="superiorPosName" />
        <result column="INFERIOR_POS_NAME" property="inferiorPosName" />
        <result column="UPSTREAM_POS_NAME" property="upstreamPosName" />
        <result column="DOWNSTREAM_POS_NAME" property="downstreamPosName" />
        <result column="EDUCATION_DEGREE" property="educationDegree" />
        <result column="PRO_KNOWLEDGE" property="proKnowledge" />
        <result column="PRO_KNOWLEDGE_MAJOR" property="proKnowledgeMajor" />
        <result column="PRO_KNOWLEDGE_LEVEL" property="proKnowledgeLevel" />
        <result column="PRO_SKILL" property="proSkill" />
        <result column="PRO_SKILL_CATE" property="proSkillCate" />
        <result column="PRO_SKILL_LEVEL" property="proSkillLevel" />
        <result column="AGE_LOW" property="ageLow" />
        <result column="AGE_HIGH" property="ageHigh" />
        <result column="JOB_LEVEL_JT" property="jobLevelJt" />
        <result column="JOB_LEVEL_JT_YEAR" property="jobLevelJtYear" />
        <result column="JOB_LEVEL_S" property="jobLevelS" />
        <result column="JOB_LEVEL_S_YEAR" property="jobLevelSYear" />
        <result column="JOB_LEVEL_DS" property="jobLevelDs" />
        <result column="JOB_LEVEL_DS_YEAR" property="jobLevelDsYear" />
        <result column="JOB_LEVEL_NOLIMIT" property="jobLevelNolimit" />
        <result column="JOB_LEVEL_NOLIMIT_YEAR" property="jobLevelNolimitYear" />
        <result column="JOB_CATE" property="jobCate" />
        <result column="JOB_CATE_LEVEL" property="jobCateLevel" />
        <result column="PRO_QUALIFICATION" property="proQualification" />
        <result column="PRO_QUALIFICATION_LEVEL" property="proQualificationLevel" />
        <result column="OTHER_DEMAND" property="otherDemand" />
        <result column="KPI" property="kpi" />
        <result column="POST" property="post" />
        <result column="POST_LEVEL" property="postLevel" />
        <result column="CREATED_BY" property="createdBy" />
        <result column="CREATION_DATE" property="creationDate" />
        <result column="LAST_UPDATED_BY" property="lastUpdatedBy" />
        <result column="LAST_UPDATE_DATE" property="lastUpdateDate" />
        <result column="ATTRIBUTE1" property="attribute1" />
        <result column="ATTRIBUTE2" property="attribute2" />
        <result column="ATTRIBUTE3" property="attribute3" />
        <result column="ATTRIBUTE4" property="attribute4" />
        <result column="ATTRIBUTE5" property="attribute5" />
        <result column="ATTRIBUTE6" property="attribute6" />
        <result column="ATTRIBUTE7" property="attribute7" />
        <result column="ATTRIBUTE8" property="attribute8" />
        <result column="ATTRIBUTE9" property="attribute9" />
        <result column="ATTRIBUTE10" property="attribute10" />
        <result column="cName" property="cName" />
        <result column="sName" property="sName" />
        <result column="mFlag" property="mFlag" />
        <result column="kstr" property="kstr" />
        <result column="levelCode" property="levelCode" />
        <result column="degreeCode" property="degreeCode" />
        <result column="provinceName" property="provinceName" />
        <result column="groupId" property="groupId" />
        <result column="parentPosName" property="parentPosName" />
        <result column="inFlag" property="inFlag" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        POS_ID, POS_NAME, POS_TYPE, CORE_FLAG, ORG_ID, PARENT_POS_ID, POS_CATE_ID, POS_SUBCATE_ID, MAJOR_ID, JOB_ID, ORG_LEVEL, EMP_TYPE, POS_LEVEL_LOW, POS_LEVEL_HIGH, ESTABLISHMENT, VERSION_ID, ACTIVE_START_DATE, ACTIVE_END_DATE, SUPERIOR_POS_NAME, INFERIOR_POS_NAME, UPSTREAM_POS_NAME, DOWNSTREAM_POS_NAME, EDUCATION_DEGREE, PRO_KNOWLEDGE, PRO_KNOWLEDGE_MAJOR, PRO_KNOWLEDGE_LEVEL, PRO_SKILL, PRO_SKILL_CATE, PRO_SKILL_LEVEL, AGE_LOW, AGE_HIGH, JOB_LEVEL_JT, JOB_LEVEL_JT_YEAR, JOB_LEVEL_S, JOB_LEVEL_S_YEAR, JOB_LEVEL_DS, JOB_LEVEL_DS_YEAR, JOB_LEVEL_NOLIMIT, JOB_LEVEL_NOLIMIT_YEAR, JOB_CATE, JOB_CATE_LEVEL, PRO_QUALIFICATION, PRO_QUALIFICATION_LEVEL, OTHER_DEMAND, KPI, POST, POST_LEVEL, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10
    </sql>
    <select id="getPosListById" resultMap="BaseResultMap">
        <![CDATA[
			SELECT eps.pos_id AS POS_ID,
				   eps.PARENT_POS_ID AS PARENT_POS_ID,
				   (SELECT S.POS_NAME FROM EHRCUC_POS_STANDARDPOS S WHERE S.POS_ID = EPS.PARENT_POS_ID) as parentPosName,
       			   eps.pos_name ,
       			   EPS.POS_CATE_ID ,
       			   (SELECT EPE.ELEMENT_NAME
			          FROM EHRCUC_POS_ELEMENT EPE
			         WHERE 1 = 1
			           AND EPE.ELEMENT_ID = EPS.POS_CATE_ID) as cName,
			       EPS.POS_SUBCATE_ID ,
			       (SELECT EPE.ELEMENT_NAME
			          FROM EHRCUC_POS_ELEMENT EPE
			         WHERE 1 = 1
			           AND EPE.ELEMENT_ID = EPS.POS_SUBCATE_ID) as sName,
			       eps.ORG_LEVEL AS orgLevel,
			       REPLACE(REPLACE(REPLACE(REPLACE(EPS.ORG_LEVEL, 'J', '集团'), 'S','省'), 'D', '市'), 'X', '县') as levelCode,
			       eps.core_flag ,
			       (SELECT HL.MEANING
			          FROM HADES_LOOKUPS HL
			         WHERE 1 = 1
			           AND HL.LOOKUP_TYPE = 'EHRCUC_POS_EDUCATION_DEGREE'
           			   AND HL.LOOKUP_CODE = EPS.EDUCATION_DEGREE) as degreeCode,
			       eps.education_degree  ,
			       ifnull(date_format(eps.active_start_date,'%Y-%m-%d %H:%i:%s'),'') as active_start_date,
		           ifnull(date_format(eps.active_end_date,'%Y-%m-%d %H:%i:%s'),'') as active_end_date
  			  FROM EHRCUC_POS_STANDARDPOS EPS
 			 WHERE 1=1
			]]>
        <if test="eFlag =='Y'">
            and now() BETWEEN IFNULL(EPS.ACTIVE_START_DATE,date_sub( now( ) , INTERVAL  1 DAY )) AND IFNULL (EPS.ACTIVE_END_DATE, DATE_ADD( now( ), INTERVAL 1 DAY ))
        </if>
        <if test="eFlag =='N'">
            and now() NOT BETWEEN IFNULL(EPS.ACTIVE_START_DATE,date_sub( now( ) , INTERVAL  1 DAY )) AND IFNULL(EPS.ACTIVE_END_DATE,DATE_ADD( now( ), INTERVAL 1 DAY ))
        </if>
        <if test="eFlag =='YN'">
            and 1 != 1
        </if>
        and EPS.PARENT_POS_ID in (${parentPosId})
        AND EPS.ORG_ID IN (SELECT RNG.ORGANIZATION_ID
        FROM HADES_RANGE_ORGANIZATION RNG
        WHERE RNG.RANGE_ID = #{rangeId})
        order by eps.creation_date
    </select>

    <select id="getPostInfoById" resultMap="BaseResultMap" resultType="cn.chinaunicom.posstandardpos.entity.PosStandardpos" >
			<![CDATA[
			SELECT eps.pos_id AS POS_ID,
			       eps.pos_name AS POS_NAME,
		           EPS.POS_CATE_ID as POS_CATE_ID,
		             (SELECT EPE.ELEMENT_NAME
		              FROM EHRCUC_POS_ELEMENT EPE
		              WHERE 1 = 1
		              AND EPE.ELEMENT_ID = EPS.POS_CATE_ID) AS cName,
		           EPS.POS_SUBCATE_ID as POS_SUBCATE_ID,
		             (SELECT EPE.ELEMENT_NAME
		              FROM EHRCUC_POS_ELEMENT EPE
		              WHERE 1 = 1
		              AND EPE.ELEMENT_ID = EPS.POS_SUBCATE_ID) AS sName,
		           eps.core_flag AS CORE_FLAG,
		             (SELECT HL.MEANING
		              FROM HADES_LOOKUPS HL
		              WHERE 1 = 1
		              AND HL.LOOKUP_TYPE = 'EHRCUC_POS_EDUCATION_DEGREE'
		              AND HL.LOOKUP_CODE = EPS.EDUCATION_DEGREE) AS degreeCode,
		           eps.education_degree AS EDUCATION_DEGREE,
		             REPLACE(REPLACE(REPLACE(REPLACE(EPS.ORG_LEVEL, 'J', '集团'),
		                               'S',
		                               '省'),
		                       'D',
		                       '市'),
		               'X',
		               '县') AS levelCode,
		           eps.org_level AS ORG_LEVEL,
		            date_format(eps.active_start_date,'%Y-%m-%d %H:%i:%s')as ACTIVE_START_DATE,
		           date_format(eps.active_end_date,'%Y-%m-%d %H:%i:%s') as ACTIVE_END_DATE,
		           eps.attribute1 as ATTRIBUTE1
			  FROM EHRCUC_POS_STANDARDPOS EPS
			 WHERE eps.pos_id = #{posId}
			]]>
    </select>
    <select id ="findProvincePostById" resultType="java.lang.Integer">
			select count(1) from ehrcuc_pos_standardpos p where  p.parent_pos_id=#{posId}
			and p.org_id in(
					SELECT RNG.ORGANIZATION_ID
                  					FROM HADES_RANGE_ORGANIZATION RNG
                 				   WHERE RNG.RANGE_ID = #{rangeId}
			)
	</select>
    <delete id="deletePosInfo"  >
		  	<![CDATA[
		  		delete from
		  		EHRCUC_POS_STANDARDPOS
		  		where pos_id = #{posId}
		  	]]>
    </delete>


    <select id="getPosInfoById" resultMap="BaseResultMap">
			<![CDATA[
			SELECT eps.pos_id AS POS_ID,
			       eps.pos_name AS POS_NAME,
		           EPS.POS_CATE_ID as POS_CATE_ID,
		             (SELECT EPE.ELEMENT_NAME
		              FROM EHRCUC_POS_ELEMENT EPE
		              WHERE 1 = 1
		              AND EPE.ELEMENT_ID = EPS.POS_CATE_ID) AS cName,
		           EPS.POS_SUBCATE_ID as POS_SUBCATE_ID,
		             (SELECT EPE.ELEMENT_NAME
		              FROM EHRCUC_POS_ELEMENT EPE
		              WHERE 1 = 1
		              AND EPE.ELEMENT_ID = EPS.POS_SUBCATE_ID) AS sName,
		           eps.core_flag AS CORE_FLAG,
		             (SELECT HL.MEANING
		              FROM HADES_LOOKUPS HL
		              WHERE 1 = 1
		              AND HL.LOOKUP_TYPE = 'EHRCUC_POS_EDUCATION_DEGREE'
		              AND HL.LOOKUP_CODE = EPS.EDUCATION_DEGREE) AS degreeCode,
		           eps.education_degree AS EDUCATION_DEGREE,
		             REPLACE(REPLACE(REPLACE(REPLACE(EPS.ORG_LEVEL, 'J', '集团'),
		                               'S',
		                               '省'),
		                       'D',
		                       '市'),
		               'X',
		               '县') AS levelCode,
		           eps.org_level AS ORG_LEVEL,
		          date_format(eps.active_start_date,'%Y-%m-%d %H:%i:%s')as ACTIVE_START_DATE,
		           date_format(eps.active_end_date,'%Y-%m-%d %H:%i:%s') as ACTIVE_END_DATE,
		           eps.attribute1 as ATTRIBUTE1
			  FROM EHRCUC_POS_STANDARDPOS EPS
			 WHERE eps.pos_id = #{posId}
			]]>
    </select>

    <insert id="createPosInfo" parameterType="cn.chinaunicom.posstandardpos.entity.PosStandardpos" useGeneratedKeys="true" keyProperty="posId" keyColumn="POS_ID">
        <selectKey keyProperty="posId" order="AFTER" resultType="java.lang.Long" >
            select LAST_INSERT_ID()
        </selectKey>
			<![CDATA[
				insert into EHRCUC_POS_STANDARDPOS(
				      POS_NAME,
				      POS_TYPE,
				      PARENT_POS_ID,
				      POS_CATE_ID,
				      POS_SUBCATE_ID,
				      ORG_ID,
				      CORE_FLAG,
				      ORG_LEVEL,
				      EDUCATION_DEGREE,
				      ACTIVE_START_DATE,
				      ACTIVE_END_DATE,
				      ATTRIBUTE1,

				      CREATED_BY,
				      CREATION_DATE,

				      LAST_UPDATED_BY,
				      LAST_UPDATE_DATE
				)values(
				      #{posName},
				      'S',
				      #{parentPosId},
				      #{posCateId},
				      #{posSubcateId},
				      #{orgId},
				      #{coreFlag},
				      #{orgLevel},
				      #{educationDegree},
				      #{activeStartDate},
				      #{activeEndDate},
				      #{attribute1},

				      #{operatorId},
				      now(),

				      #{operatorId},
				      now()
				)
			 ]]>
    </insert>

    <update id="updatePosInfo" parameterType="java.util.Map" >
    <![CDATA[
			update EHRCUC_POS_STANDARDPOS
			set POS_NAME = #{stringObjectMap.posName},
				CORE_FLAG = #{stringObjectMap.coreFlag},
				EDUCATION_DEGREE = #{stringObjectMap.educationDegree},
				ORG_LEVEL = #{stringObjectMap.orgLevel},
			    ACTIVE_START_DATE = str_to_date(#{stringObjectMap.activeStartDate},'%Y/%m/%d'),
			    ACTIVE_END_DATE = str_to_date(#{stringObjectMap.activeEndDate},'%Y/%m/%d'),

			    LAST_UPDATED_BY = #{operatorId},
			    LAST_UPDATE_DATE = now()
			where POS_ID = #{stringObjectMap.posId}
		]]>
    </update>

    <select id = "findPostByName"   resultType="java.lang.Integer">
        <![CDATA[
            select
                count(1)
             from
               ehrcuc_pos_standardpos s
               where 1=1
              and s.pos_name = #{post}
              and s.pos_type = #{posType}
              and s.org_id = #{orgId}
              ]]>
	</select>
    <select id="selectposStandardposInfoByName"  resultMap="BaseResultMap" >
					SELECT EPS.POS_ID POS_ID,
					       EPS.POS_NAME POS_NAME,
					       EPS.POS_CATE_ID POS_CATE_ID,
					       EPS.POS_SUBCATE_ID POS_SUBCATE_ID ,
					       EPS.MAJOR_ID MAJOR_ID,
					       EPS.JOB_ID JOB_ID,
					       EPS.ORG_LEVEL ORG_LEVEL ,
					       EPS.EMP_TYPE EMP_TYPE,
					       EPS.POS_ID PARENT_POS_ID,
					       EPS.ACTIVE_START_DATE ACTIVE_START_DATE,
					       EPS.ACTIVE_END_DATE ACTIVE_END_DATE
					 	   from EHRCUC_POS_STANDARDPOS EPS
					WHERE 1 = 1
						   AND EPS.POS_TYPE = #{posType}
						   AND EPS.POS_NAME = #{post}
						   AND now()  BETWEEN EPS.ACTIVE_START_DATE AND IFNULL(EPS.ACTIVE_END_DATE,DATE_ADD( now( ), INTERVAL 1 DAY ))

	</select>
    <insert id="saveProvincePostView" parameterType="cn.chinaunicom.posstandardpos.entity.PosStandardpos" useGeneratedKeys="true" keyProperty="posId" keyColumn="POS_ID">
        <selectKey keyProperty="posId" order="AFTER" resultType="java.lang.Long" >
            select LAST_INSERT_ID()
        </selectKey>
		insert into EHRCUC_POS_STANDARDPOS(
				      POS_NAME,
				      POS_TYPE,
				      PARENT_POS_ID,
				      POS_CATE_ID,
				      POS_SUBCATE_ID,
				      ORG_ID,
				      CORE_FLAG,
				      ORG_LEVEL,
				      EDUCATION_DEGREE,
				      ACTIVE_START_DATE,
				      ACTIVE_END_DATE,
				      CREATED_BY,
				      CREATION_DATE,
				      LAST_UPDATED_BY,
				      LAST_UPDATE_DATE,
				      ATTRIBUTE1
				)values(
				      #{posName},
				      #{attribute1},
				      #{parentPosId},
				      #{posCateId},
				      #{posSubcateId},
				      #{orgId},
				      #{coreFlag},
				      #{orgLevel},
				      #{educationDegree},
				      #{activeStartDate},
				      #{activeEndDate},
				      #{createdBy},
				      now(),
				      #{createdBy},
				      now(),
				      '100'
				)
	</insert>

    <update id="updateActiveEndDate" parameterType="java.util.Map">
				<![CDATA[
					update EHRCUC_POS_STANDARDPOS
					set ACTIVE_END_DATE = #{activeEndDate}
					where POS_ID = #{posId}
				]]>
		</update>
    <!--通过省基准岗位ID  posid       查看-->
    <select id="checkProvincePostView" resultMap="BaseResultMap">
		<![CDATA[
			SELECT EPS.POS_ID as POS_ID,

       (SELECT EPE.ELEMENT_NAME
          FROM EHRCUC_POS_ELEMENT EPE
         WHERE 1 = 1
           AND EPE.ELEMENT_ID = EPS.POS_CATE_ID) as cName,
       (SELECT EPE.ELEMENT_NAME
          FROM EHRCUC_POS_ELEMENT EPE
         WHERE 1 = 1
           AND EPE.ELEMENT_ID = EPS.POS_SUBCATE_ID) as sName,
       EPS.POS_NAME as posName,
       (case when EPS.CORE_FLAG ='Y' then '是' else '否' end) AS CORE_FLAG,
       EPS.EDUCATION_DEGREE as degreeCode,
       EPS.ORG_LEVEL as levelCode,
       (SELECT HL.MEANING
          FROM HADES_LOOKUPS HL
         WHERE 1 = 1
           AND HL.LOOKUP_TYPE = 'EHRCUC_POS_EDUCATION_DEGREE'
           AND HL.LOOKUP_CODE = EPS.EDUCATION_DEGREE) as educationDegree,
       REPLACE(REPLACE(REPLACE(REPLACE(EPS.ORG_LEVEL, 'J', '集团'),
                               'S',
                               '省'),
                       'D',
                       '市'),
               'X',
               '县') as ORG_LEVEL,
       (SELECT REPLACE(group_concat(EPE.ELEMENT_NAME), ',', ';')
          FROM (SELECT DISTINCT EPPE.POS_ID, EPPE.SKID
                  FROM EHRCUC_POS_POS_ELEMENT EPPE) E,
               EHRCUC_POS_ELEMENT EPE
         WHERE 1 = 1
           AND E.POS_ID = EPS.POS_ID
           AND EPE.ELEMENT_TYPE = '40'
           AND E.SKID = EPE.ELEMENT_ID) KSTR,
             date_format(active_start_date,'%Y-%m-%d %H:%i:%s')as ACTIVE_START_DATE,
		     date_format(active_end_date,'%Y-%m-%d %H:%i:%s') as ACTIVE_END_DATE
  FROM EHRCUC_POS_STANDARDPOS EPS
 WHERE 1 = 1
   AND EPS.POS_TYPE = 'S'
   AND POS_ID = #{posid}
		]]>
	</select>
    <!--岗位职责-->
    <select id="searchProvincePostDutyById" resultMap="BaseResultMap">
		<![CDATA[
			SELECT SP.POS_ID as POS_ID,
						SP.SK_STR as kstr,
						(case when ifnull(JP.STR,'M')='M' then 'N' else 'Y' end) AS inFlag
						FROM
						(SELECT EPS.POS_ID,concat(EPS.PARENT_POS_ID ,'-', EPPE.SKID)as STR,
						concat( EPTV.MNAME , '.' , EPTV.KNAME , '.' , EPTV.SKNAME )as SK_STR
						FROM EHRCUC_POS_POS_ELEMENT EPPE,
						EHRCUC_POS_STANDARDPOS EPS,
						EHRCUC_POS_TREE_V EPTV
						WHERE 1 = 1
						AND EPS.POS_ID =#{posid}
						AND EPS.POS_ID = EPPE.POS_ID
						AND EPPE.SKID = EPTV.SKID) SP
						left  join
						(SELECT concat(EPS.POS_ID , '-' , EPPE.SKID)as STR
						FROM EHRCUC_POS_POS_ELEMENT EPPE,
						EHRCUC_POS_STANDARDPOS EPS
						WHERE 1 = 1
						AND EPS.POS_TYPE = 'J'
						AND EPS.POS_ID = EPPE.POS_ID) JP
						on  SP.STR = JP.STR
						WHERE 1 = 1
						ORDER BY SP.SK_STR
		]]>
	</select>

</mapper>
